<!DOCTYPE html>
<html lang="en">
    <head>
        <%- include ('./partials/head') -%>
    </head>
    
    <body class="<%= fs.existsSync("views/"+view+".ejs") ? (typeof bodyClass == 'undefined' ? '' : bodyClass) : 'error' %>">
        
        <!-- TODO: styling -->
        <!-- <noscript>
            NO JAVASCRIPT!!!! PANIEK!!!
        </noscript> -->

        <% if ( fs.existsSync("views/"+view+".ejs") ) { %>
            <%- include (view) -%>
        <% } else { %>
            <%- include ('blanco', { 'partial': './partials/message', 'messageTitle': 'Oops!', 'messageSubTitle': 'Template does not exists...'}) -%>
        <% } %>

        <script>
            function invokeServiceWorkerUpdateFlow(registration) {
                if (registration.waiting) {
                    console.log('invoke update flow');
                    // todo: update banner in ui?
                    // let waiting Service Worker know it should became active
                    registration.waiting.postMessage('SKIP_WAITING')
                }
            }

            if ('serviceWorker' in navigator) {
                // wait for the page to load
                window.addEventListener('load', async () => {
                    // register the service worker from the file specified
                    const registration = await navigator.serviceWorker.register('/service-worker.js')

                    // ensure the case when the updatefound event was missed is also handled
                    // by re-invoking the prompt when there's a waiting Service Worker
                    if (registration.waiting) {
                        console.log('waiting');

                        invokeServiceWorkerUpdateFlow(registration)
                    }

                    // detect Service Worker update available and wait for it to become installed
                    registration.addEventListener('updatefound', () => {
                        console.log('update found');
                        if (registration.installing) {
                            // wait until the new Service worker is actually installed (ready to take over)
                            registration.installing.addEventListener('statechange', () => {
                                console.log('state change');

                                if (registration.waiting) {
                                    // if there's an existing controller (previous Service Worker), show the prompt
                                    if (navigator.serviceWorker.controller) {
                                        invokeServiceWorkerUpdateFlow(registration)
                                    } else {
                                        // otherwise it's the first install, nothing to do
                                        console.log('Service Worker initialized for the first time')
                                    }
                                }
                            })
                        }
                    })

                    let refreshing = false;

                    // detect controller change and refresh the page
                    navigator.serviceWorker.addEventListener('controllerchange', () => {
                        if (!refreshing) {
                            window.location.reload()
                            refreshing = true
                        }
                    })
                })
            }
        </script>

        <!-- <script src="/src/js/homeData.js"></script> -->

    </body>
</html>