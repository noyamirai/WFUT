import{getPageContent,onLinkNavigate}from"/scripts/utils.js";function startViewTransition(e){document.startViewTransition?document.startViewTransition(e):e()}function showLoader(){var e=document.createElement("div");e.innerText="Loading...",e.style.position="fixed",e.style.top=0,e.style.left=0,e.style.width="100%",e.style.height="100%",e.style.backgroundColor="rgba(0, 0, 0, 0.5)",e.style.color="#fff",e.style.display="flex",e.style.justifyContent="center",e.style.alignItems="center",e.style.zIndex="1000",e.className="loader",document.body.appendChild(e)}function hideLoader(){var e=document.querySelector(".loader");e&&e.remove()}onLinkNavigate(async({toPath:e})=>{console.log("ONLINKNAV");let t;var n=await(await caches.open("other-cache")).match(e);n||showLoader(),console.log(n),!n&&e.includes("team-details")&&e.includes("squad"),t=await getPageContent(e),startViewTransition(async()=>{hideLoader(),document.body.innerHTML=t})});
async function getModifiedHtmlAfterLoad(e,o){console.log("PRELOADING");const r=Array.from(o).map(a=>a.getAttribute("data-src"));try{var a=await preloadImages(r),t=(console.log("All images preloaded successfully:",a),a.forEach((a,e)=>{o[e].src=a.url}),e.body.innerHTML);return t}catch(a){return o.forEach((a,e)=>{a.src=r[e]}),e.body.innerHTML}}function preloadImages(a){var e=[];for(const[r,t]of a.entries()){const n=new Image;var o=new Promise((a,e)=>{n.onload=()=>{a({url:t,index:r})},n.onerror=()=>{e("Failed to preload image "+t)}});n.src=t,e.push(o)}return Promise.all(e)}document.addEventListener("DOMContentLoaded",async function(){if(window.location.pathname.includes("team-details")&&window.location.pathname.includes("squad")&&(console.log("INITIAL LOAD ON SQUAD PAGE"),!await(await caches.open("other-cache")).match(window.location.pathname))){console.log("SQUAD PAGE NOT IN CACHE");const o=document.querySelectorAll("[data-player-image]"),r=Array.from(o).map(a=>a.getAttribute("data-src"));try{var a=await preloadImages(r);console.log("All images preloaded successfully:",a),a.forEach((a,e)=>{o[e].src=a.url})}catch(a){o.forEach((a,e)=>{a.src=r[e]})}}});